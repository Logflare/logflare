name: Docker CI Multi-Platform

on:
  workflow_dispatch:
  push:
    branches: [staging, master]

permissions:
  contents: read

jobs:
  settings:
    runs-on: ubuntu-latest
    outputs:
      version: ${{steps.env.outputs.version}}
    steps:
      - uses: actions/checkout@v3
      - name: Setup outputs
        id: env
        run: |
          echo "version=$(cat ./VERSION)" >> "$GITHUB_OUTPUT"
  release_amd:
    timeout-minutes: 120
    needs: settings
    runs-on: ubuntu-latest
    outputs:
      digest: ${{ steps.build.outputs.digest }}
    steps:
      - uses: actions/checkout@v3
      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - uses: docker/setup-buildx-action@v2
        # add driver config as we are using self-hosted runners
        with:
          driver: docker
          driver-opts: |
            image=moby/buildkit:master
            network=host
      - id: build
        uses: docker/build-push-action@v3
        with:
          push: true
          tags: supabase/logflare:${{ needs.settings.outputs.version }}-amd64
          platforms: linux/amd64
          # cache only amd
          cache-from: type=gha
          cache-to: type=gha,mode=max
  release_arm:
    timeout-minutes: 120
    needs: settings
    runs-on: [self-hosted, arm-runner]
    outputs:
      digest: ${{ steps.build.outputs.digest }}
    steps:
      - uses: actions/checkout@v3
      - uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - uses: docker/setup-buildx-action@v2
        with:
        # add driver config as we are using self-hosted runners
          driver: docker
          driver-opts: |
            image=moby/buildkit:master
            network=host
      - id: build
        uses: docker/build-push-action@v3
        with:
          push: true
          tags: supabase/logflare:${{ needs.settings.outputs.version }}-arm64
          platforms: linux/arm64
          # don't cache for arm, only amd
          no-cache: true

  merge_publish:
    needs:
      - settings
      - release_arm
      - release_amd
    runs-on: ubuntu-latest
    steps:
      - uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - uses: docker/setup-buildx-action@v2
      - name: master - Merge multi-arch manifests and push
        if: ${{github.ref == 'refs/heads/master'}}
        run: |
          docker buildx imagetools create -t supabase/logflare:latest -t supabase/logflare:${{ needs.settings.outputs.version }} \
          supabase/logflare@${{ needs.release_arm.outputs.digest }} \
          supabase/logflare@${{ needs.release_amd.outputs.digest }}
          docker push supabase/logflare:latest
          docker psuh supabase/logflare:${{ needs.settings.outputs.version }}
      - name: staging - Merge multi-arch manifests and push
        if: ${{github.ref == 'refs/heads/staging'}}
        run: |
          docker buildx imagetools create -t supabase/logflare:staging  \
          supabase/logflare@${{ needs.release_arm.outputs.digest }} \
          supabase/logflare@${{ needs.release_amd.outputs.digest }}
          docker push supabase/logflare:staging
  # publish:
  #   name: Build and publish amd64 and arm64 image
  #   # run emulation on ARM64
  #   runs-on: [self-hosted, ARM64]
  #   env:
  #     PUSH_TO_DOCKER: ${{github.ref == 'refs/heads/staging'}}
  #   steps:
  #     - uses: actions/checkout@v3
  #     - id: version
  #       name: Get version
  #       run: |
  #         echo "LOGFLARE_VERSION=$(cat ./VERSION)" >> "$GITHUB_ENV"
  #     - name: Set up QEMU
  #       uses: docker/setup-qemu-action@v2
  #     - name: Setup docker context
  #       run: |
  #         docker context create buildcontext
  #         docker buildx create buildcontext
  #     - name: Set up Docker Buildx
  #       uses: docker/setup-buildx-action@v2
  #     - name: Login to Docker Hub
  #       uses: docker/login-action@v2
  #       with:
  #         username: ${{ secrets.DOCKERHUB_USERNAME }}
  #         password: ${{ secrets.DOCKERHUB_TOKEN }}
  #     # build for master
  #     - name: Build and push latest, versioned
  #       if: ${{github.ref == 'refs/heads/master'}}
  #       uses: docker/build-push-action@v3
  #       with:
  #         push: true
  #         tags: supabase/logflare:latest, supabase/logflare:${{ env.LOGFLARE_VERSION }}
  #         cache-from: type=gha
  #         cache-to: type=gha,mode=max
  #         platforms: linux/arm64,linux/amd64
  #     # build for staging
  #     - name: Build and push staging build
  #       if: ${{github.ref == 'refs/heads/staging'}}
  #       uses: docker/build-push-action@v3
  #       with:
  #         push: true
  #         tags: supabase/logflare:staging
  #         cache-from: type=gha
  #         cache-to: type=gha,mode=max
  #         platforms: linux/arm64,linux/amd64
