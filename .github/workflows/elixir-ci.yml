name: Elixir CI

on:
  workflow_dispatch:
  pull_request:
    branches: ["**"]
    paths:
      - "lib/**"
      - "config/**"
      - "*.exs"
      - "*.lock"
      - "docs/docs.logflare.com/docs/**"
      - "native/**"
      - "priv/**"
      - "test/**"
      # Run suite when this file is changed
      - ".github/workflows/elixir-ci.yml"

permissions:
  contents: read

env:
  MIX_ENV: test

jobs:
  check:
    name: Checks
    runs-on: ubuntu-latest
    strategy:
      matrix:
        commands:
          - name: Code Quality - Linting
            run: mix lint --only warnings
          - name: Code Quality - Formatting
            run: mix test.format
          - name: Compilation Warnings
            run: mix test.compile
          - name: Tests
            run: mix do ecto.create, ecto.migrate, test.coverage.ci
          # - name: Security - Sobelow Code Scan
          #   run: mix test.security
          # - name: Typing check
          #   run: mix test.typings
    services:
      postgres:
        image: bitnami/postgresql:15
        ports:
          - 5432:5432
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: logflare_test
          POSTGRESQL_WAL_LEVEL: logical
        # Set health checks to wait until postgres has started
        options: >-
          --health-cmd "pg_isready -d logflare_test -U postgres -p 5432"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 10
    env:
      MIX_ENV: test
      SHELL: /bin/bash
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    steps:
      - uses: actions/checkout@v3
      - name: Set up Elixir
        uses: erlef/setup-beam@v1
        with:
          version-file: .tool-versions
          version-type: strict
      - name: Install Rust
        uses: dtolnay/rust-toolchain@v1
        with:
          toolchain: stable
      - name: Restore dependencies cache
        uses: actions/cache@v3
        with:
          path: |
            deps
            _build
            dialyzer
          key: ${{ runner.os }}-mix-${{  hashFiles('**/mix.lock', '**/Cargo.lock' ) }}
          restore-keys: ${{ runner.os }}-mix--dialyzer
      - name: Install dependencies
        run: mix do deps.get, deps.compile
      - name: Run ${{ matrix.commands.name }}
        run: ${{ matrix.commands.run }}