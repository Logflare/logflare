name: Cloudbuild Build & Deploy

on:
  workflow_dispatch:
  workflow_call:

permissions:
  contents: read

jobs:
  build_image:
    name: Build & Deploy GCP Image
    strategy:
      matrix:
        env: [prod, staging]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Set common env vars
        # GCP credentials is a multi-line string, and will result in error when trying to set it to github env.
        # directly use it in the auth step instead.
        run: |
          echo "version=$(cat ./VERSION)" >> "$GITHUB_ENV"
          echo "short_sha=$(git rev-parse --short HEAD)" >> "$GITHUB_ENV"
          echo "host_connection=github-logflare" >> "$GITHUB_ENV"
          echo "repository_name=Logflare-logflare" >> "$GITHUB_ENV"
      - uses: actions/setup-python@v4
      - name: Set ${{ matrix.env }} env vars
        if: matrix.env == 'prod'
        run: |
          echo "project_id=logflare-232118" >> "$GITHUB_ENV"
          echo "region=europe-west3" >> "$GITHUB_ENV"
      - name: Set ${{ matrix.env }} env vars
        if: matrix.env == 'staging'
        run: |
          echo "project_id=logflare-staging" >> "$GITHUB_ENV"
          echo "region=us-central1" >> "$GITHUB_ENV"
      - uses: actions/setup-python@v4
        with:
          python-version: "3.10"
      - uses: "google-github-actions/auth@v1"
        with:
          credentials_json: ${{ matrix.env == 'prod' && secrets.GCP_PROD_CREDENTIALS || secrets.GCP_STAGING_CREDENTIALS }}
          create_credentials_file: true
          export_environment_variables: true
          cleanup_credentials: false
      - uses: "google-github-actions/setup-gcloud@v1"
        with:
          version: "449.0.0"
          project_id: ${{ env.project_id }}
      - name: Build & deploy for staging (main branch)
        if: github.event_name == 'push' && matrix.env == 'staging'
        run: make deploy.staging.main

      - name: Build & ${{ matrix.env == 'prod' && 'pre-deploy' || 'deploy'}} for ${{ matrix.env }} (versioned)
        if: (github.event_name == 'release' || github.event_name == 'workflow_dispatch'
        run: make deploy.${{ matrix.env }}.versioned
