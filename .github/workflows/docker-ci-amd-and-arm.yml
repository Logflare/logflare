name: Docker CI Multi-Platform

on:
  workflow_dispatch:
  push:
    branches: [staging, master]

permissions:
  contents: read

jobs:
  settings:
    runs-on: ubuntu-latest
    outputs:
      version: ${{steps.env.outputs.version}}
    steps:
      - name: Setup outputs
        id: env
        run: |
          echo "version=$(cat ./VERSION)" >> "$GITHUB_OUTPUT"
  release_x86:
    needs: settings
    runs-on: [self-hosted, x86]
    outputs:
      digest: ${{ steps.build.outputs.digest }}
    steps:
      - uses: docker/setup-buildx-action@v2
      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - id: build
        uses: docker/build-push-action@v3
        with:
          tags: supabase/logflare:${{ needs.settings.outputs.version }}-amd64
          platforms: linux/amd64
          # cache only amd
          cache-from: type=gha
          cache-to: type=gha,mode=max
          outputs: type=docker,dest=/tmp/amd64.tar
      - name: Upload artifact
        uses: actions/upload-artifact@v3
        with:
          name: amd64
          path: /tmp/amd64.tar
  release_arm:
    needs: settings
    runs-on: [self-hosted, arm-runner]
    outputs:
      digest: ${{ steps.build.outputs.digest }}
    steps:
      - uses: actions/checkout@v3
      - uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - uses: docker/setup-buildx-action@v2
        with:
          driver: docker
          driver-opts: |
            image=moby/buildkit:master
            network=host
      - id: build
        uses: docker/build-push-action@v3
        with:
          tags: supabase/logflare:${{ needs.settings.outputs.version }}-amd64
          platforms: linux/arm64
          # don't cache for arm, only amd
          no-cache: true
          outputs: type=docker,dest=/tmp/arm64.tar
      - name: Upload artifact
        uses: actions/upload-artifact@v3
        with:
          name: arm64
          path: /tmp/arm64.tar

  merge_publish:
    needs:
      - settings
      - release_x86
      - release_arm
    runs-on: ubuntu-latest
    steps:
      - uses: docker/setup-buildx-action@v2
      - uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      - name: master - Merge multi-arch manifests and push
        if: ${{github.ref == 'refs/heads/master'}}
        run: |
          docker buildx imagetools create -t supabase/logflare:latest -t supabase/logflare:${{ needs.settings.outputs.version }} \
          supabase/logflare@${{ needs.release_x86.outputs.image_digest }} \
          supabase/logflare@${{ needs.release_arm.outputs.image_digest }}
          docker push supabase/logflare:latest
          docker psuh supabase/logflare:${{ needs.settings.outputs.version }}
      - name: staging - Merge multi-arch manifests and push
        if: ${{github.ref == 'refs/heads/staging'}}
        run: |
          docker buildx imagetools create -t supabase/logflare:staging  \
          supabase/logflare@${{ needs.release_x86.outputs.image_digest }} \
          supabase/logflare@${{ needs.release_arm.outputs.image_digest }}
          docker push supabase/logflare:staging
