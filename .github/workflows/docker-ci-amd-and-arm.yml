name: Docker CI Multi-Platform

on:
  workflow_dispatch:
  push:
    branches: [staging, master]

permissions:
  contents: read

jobs:
  publish:
    name: Build and publish amd64 and arm64 image
    # run emulation on ARM64
    runs-on: [self-hosted, ARM64]
    env:
      PUSH_TO_DOCKER: ${{github.ref == 'refs/heads/staging'}}
    steps:
      - uses: actions/checkout@v3
      - id: version
        name: Get version
        run: |
          echo "LOGFLARE_VERSION=$(cat ./VERSION)" >> "$GITHUB_ENV"
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
      - name: Setup docker context
        run: |
          docker context create buildcontext
          docker buildx create buildcontext
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      # build for master
      - name: Build and push latest, versioned
        if: ${{github.ref == 'refs/heads/master'}}
        uses: docker/build-push-action@v3
        with:
          push: true
          tags: supabase/logflare:latest, supabase/logflare:${{ env.LOGFLARE_VERSION }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          platforms: linux/arm64,linux/amd64
      # build for staging
      - name: Build and push staging build
        if: ${{github.ref == 'refs/heads/staging'}}
        uses: docker/build-push-action@v3
        with:
          push: true
          tags: supabase/logflare:staging
          cache-from: type=gha
          cache-to: type=gha,mode=max
          platforms: linux/arm64,linux/amd64
