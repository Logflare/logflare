<.form
  :let={f}
  for={
    if(@backend != nil,
      do: %{
        "name" => @backend.name,
        "type" => @backend.type,
        "description" => @backend.description,
        "config" => if(@backend.config, do: Logflare.Utils.stringify_keys(@backend.config), else: nil)
      },
      else: %{}
    )
  }
  as={:backend}
  action="#"
  phx-submit="save_backend"
  class="mt-4"
>
  <div class="tw-sticky tw-flex tw-justify-between tw-gap-4">
    <button :if={@backend} data-confirm="Are you sure? This cannot be undone" phx-click="delete" phx-value-backend_id={@backend.id} class="btn btn-outline-danger" type="button">
      <i class="fas fa-trash"></i> Delete
    </button>
    <div>
      <.link href={~p"/backends"}>
        <button data-confirm="Are you sure? All unsaved changes will be lost" class="btn btn-outline-secondary" type="button">
          Cancel
        </button>
      </.link>
      <%= submit("Save changes", class: "btn btn-primary") %>
    </div>
  </div>

  <div :if={@live_action == :new}>
    <%= select(f, :type, ["Select a backend type...", Webhook: :webhook, Postgres: :postgres, BigQuery: :bigquery, Datadog: :datadog, Elastic: :elastic, Loki: :loki, ClickHouse: :clickhouse],
      phx_change: :change_form_type,
      class: "form-control form-control-margin",
      id: "type"
    ) %>
  </div>

  <div class="form-group mt-2">
    <%= hidden_input(f, :user_id, value: @user.id) %>
    <%= label(f, :name) %>
    <%= text_input(f, :name, class: "form-control") %>
    <%= label(f, :description) %>
    <%= text_input(f, :description, class: "form-control") %>
  </div>

  <.inputs_for :let={f_config} field={f[:config]}>
    <div class="form-group mt-2">
      <%= case @form_type do %>
        <% "webhook" -> %>
          <div class="form-group">
            <%= label f_config, :url do %>
              Websocket URL to send the ingested data
            <% end %>
            <%= text_input(f_config, :url, class: "form-control") %>
          </div>
        <% "postgres" -> %>
          <div class="form-group">
            <%= label f_config, :url do %>
              Postgres URL for the ingestion database
            <% end %>
            <%= text_input(f_config, :url, class: "form-control") %>
            <small class="form-text text-muted">
              Postgres URL with the following format, for example: <code>postgresql://user:password@host:port/database</code>
            </small>
          </div>
          <div class="form-group">
            <%= label f_config, :username do %>
              Username
            <% end %>
            <%= text_input(f_config, :username, class: "form-control") %>
          </div>
          <div class="form-group">
            <%= label f_config, :password do %>
              Password
            <% end %>
            <%= text_input(f_config, :password, class: "form-control") %>
          </div>
          <div class="form-group">
            <%= label f_config, :hostname do %>
              Hostname
            <% end %>
            <%= text_input(f_config, :hostname, class: "form-control") %>
          </div>
          <div class="form-group">
            <%= label f_config, :port do %>
              Port
            <% end %>
            <%= text_input(f_config, :port, class: "form-control") %>
          </div>
          <div class="form-group">
            <%= label f_config, :database do %>
              Database
            <% end %>
            <%= text_input(f_config, :database, class: "form-control") %>
          </div>
          <div class="form-group">
            <%= label f_config, :pool_size do %>
              Connection pool size
            <% end %>
            <%= text_input(f_config, :pool_size, class: "form-control", default: 1) %>
          </div>
          <div class="form-group">
            <%= label f_config, :schema do %>
              Schema where data should be store, if blank the database defaults will be used
            <% end %>
            <%= text_input(f_config, :schema, class: "form-control") %>
            <small class="form-text text-muted">
              Schema name, for example: <code>analytics</code>
            </small>
          </div>
        <% "bigquery" -> %>
          <div class="form-group">
            <%= label(f_config, :project_id, "Google Cloud Project ID") %>
            <%= text_input(f_config, :project_id, class: "form-control") %>
            <small class="form-text text-muted">
              The Google Cloud project ID where the data is to be inserted into via BigQuery.
            </small>
          </div>

          <div class="form-group">
            <%= label f_config, :dataset_id do %>
              Dataset ID
            <% end %>
            <%= text_input(f_config, :dataset_id, class: "form-control") %>
            <small class="form-text text-muted">
              A BigQuery Dataset ID where data will be stored.
            </small>
          </div>
        <% "datadog" -> %>
          <div class="form-group">
            <%= label(f_config, :api_key, "API Key") %>
            <%= text_input(f_config, :api_key, class: "form-control", type: "password") %>
            <small class="form-text text-muted">
              The API Key obtained from the Datadog dashboard.
              https://us1.datadoghq.com/organization-settings/api-keys
            </small>
          </div>

          <div class="form-group">
            <%= label(f_config, :region, "Region") %>
            <%= select(f_config, :region, ["Select a region..." | Map.keys(Logflare.Backends.Adaptor.DatadogAdaptor.api_url_mapping())],
              class: "form-control form-control-margin",
              id: "datadog-region"
            ) %>
            <small class="form-text text-muted">
              Region that the Datadog account is in.
            </small>
          </div>
        <% "elastic" -> %>
          <div class="form-group">
            <%= label(f_config, :url, "Filebeat URL") %>
            <%= text_input(f_config, :url, class: "form-control") %>
            <small class="form-text text-muted">
              The Filebeat HTTP(S) endpoint to send events.
            </small>
          </div>
          <div class="form-group">
            <%= label(f_config, :username, "Basic Auth Username") %>
            <%= text_input(f_config, :username, class: "form-control") %>
            <%= label(f_config, :password, "Basic Auth Password") %>
            <%= text_input(f_config, :password, class: "form-control", type: "password") %>
            <small class="form-text text-muted">
              For basic auth, both username and password must be provided.
            </small>
          </div>
        <% "loki" -> %>
          <div class="form-group">
            <%= label(f_config, :url, "Loki URL") %>
            <%= text_input(f_config, :url, class: "form-control") %>
            <small class="form-text text-muted">
              The Loki HTTP(S) endpoint to send events.
            </small>
          </div>

          <div class="form-group">
            <%= label(f_config, :header1_key, "Header 1 Key") %>
            <%= text_input(f_config, :header1_key, class: "form-control") %>
            <%= label(f_config, :header1_value, "Header 1 Value") %>
            <%= text_input(f_config, :header1_value, class: "form-control") %>
          </div>
        <% "clickhouse" -> %>
          <div class="form-group">
            <%= label(f_config, :url, "ClickHouse URL") %>
            <%= text_input(f_config, :url, class: "form-control") %>
            <small class="form-text text-muted">
              Provide the ClickHouse hostname URL with the following format, for example: <code>https://hostname</code>
            </small>
          </div>
          <div class="form-group">
            <%= label(f_config, :username, "ClickHouse Username") %>
            <%= text_input(f_config, :username, class: "form-control") %>
            <%= label(f_config, :password, "ClickHouse Password") %>
            <%= text_input(f_config, :password, class: "form-control", type: "password") %>
            <small class="form-text text-muted">
              Both username and password must be provided.
            </small>
          </div>
          <div class="form-group">
            <%= label(f_config, :database, "Database Name") %>
            <%= text_input(f_config, :database, class: "form-control", default: "default") %>
            <%= label(f_config, :table, "Table Name") %>
            <%= text_input(f_config, :table, class: "form-control", default: "supabase_log_ingress") %>
            <small class="form-text text-muted">
              The database and table names within ClickHouse where events will be stored.
            </small>
          </div>
          <div class="form-group">
            <%= label(f_config, :port, "Port") %>
            <%= text_input(f_config, :port, class: "form-control", default: 8443) %>
            <small class="form-text text-muted">
              The port number for the ClickHouse server.
            </small>
          </div>
        <% _ -> %>
          <div>Select a Backend Type</div>
      <% end %>
    </div>
  </.inputs_for>
</.form>
