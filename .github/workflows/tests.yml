name: Elixir CI

on:
  workflow_dispatch:
  push:
    branches: [staging]
  pull_request:
    branches: [staging]

permissions:
  contents: read

jobs:
  build:
    name: Build and test
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:13
        ports:
          - 5432:5432
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: logflare_test
        # Set health checks to wait until postgres has started
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    env:
      MIX_ENV: test
      SHELL: /bin/bash
      PUSH_TO_DOCKER: ${{github.ref == 'refs/heads/staging'}}
    steps:
      - uses: actions/checkout@v3
      - name: Set up Elixir
        uses: erlef/setup-beam@v1
        with:
          elixir-version: "1.12.3" # Define the elixir version [required]
          otp-version: "24" # Define the OTP version [required]
      - name: Set up Rust
        uses: ATiltedTree/setup-rust@v1
        with:
          rust-version: stable
      - name: Restore dependencies cache
        uses: actions/cache@v3
        with:
          path: |
            deps
            _build
          key: ${{ runner.os }}-mix-${{ hashFiles('**/mix.lock') }}
          restore-keys: ${{ runner.os }}-mix-
      - name: Install dependencies
        run: mix deps.get
      - name: Run compilation warnings check
        run: mix test.compile
      - name: Run unit tests with code coverage check
        run: mix test.coverage
    # - name: Test - security
    #   run: mix test.security
      - name: Code quality - formatting
        run: mix test.format
    # - name: Code quality - typings
    #   run: mix test.typings
      - name: Code quality - linting
        run: mix lint --only warnings
      - name: Get version
        run: echo "LOGFLARE_VERSION=$(mix run --no-start --eval 'IO.puts(Keyword.get(Mix.Project.config, :version))')" >> $GITHUB_ENV
      - name: Get commit SHA
        run: echo "GITHUB_SHA=$(git rev-parse HEAD)" >> $GITHUB_ENV
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build
        uses: docker/build-push-action@v3
        with:
          push: ${{env.PUSH_TO_DOCKER}}
          tags: supabase/logflare:${{ env.LOGFLARE_VERSION }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

